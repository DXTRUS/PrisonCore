plugins {
    id 'java'
    id 'io.github.goooler.shadow' version '8.1.7'
}

group = 'us.dxtrus'
version = '1.0'

repositories {
    mavenCentral()
    maven { url "https://repo.papermc.io/repository/maven-public/" }
    maven { url "https://oss.sonatype.org/content/groups/public/" }
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url 'https://repo.infernalsuite.com/repository/maven-releases/' }
    maven { url 'https://repo.infernalsuite.com/repository/maven-snapshots/' }
    maven { url 'https://repo.rapture.pw/repository/maven-releases/' }
    maven { url 'https://repo.william278.net/snapshots' }
    maven { url "https://maven.enginehub.org/repo/" }

//    maven {
//        name = "dxtrusReleases"
//        url = "https://maven.asdev.info/releases"
//        credentials(PasswordCredentials)
//        authentication {
//            basic(BasicAuthentication)
//        }
//    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"
    compileOnly files("./libs/commons-2.1.5.jar", "./libs/api-4.0.0.jar")
    // compileOnly 'com.infernalsuite.aswm:api:3.0.0'
    //compileOnly 'com.infernalsuite.aswm:api:3.0.0'
    implementation 'com.infernalsuite.asp:loaders:4.0.0-SNAPSHOT'
    //implementation 'com.infernalsuite.asp:mysql-loader:4.0.0-SNAPSHOT'
    //implementation 'com.infernalsuite.asp:api:4.0.0-SNAPSHOT'

    //compileOnly "net.dxtrus.scoreboard:DexterousScoreboard:1.1-SNAPSHOT"

    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly 'me.clip:placeholderapi:2.11.6'

    compileOnly 'net.william278.husksync:husksync-bukkit:3.7-daaf514+1.21.1' // HuskSync hook

    compileOnly "org.projectlombok:lombok:1.18.30"
    annotationProcessor "org.projectlombok:lombok:1.18.30"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testCompileOnly 'org.jetbrains:annotations:24.1.0'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    implementation platform("com.intellectualsites.bom:bom-newest:1.55") // Ref: https://github.com/IntellectualSites/bom

    compileOnly "com.fastasyncworldedit:FastAsyncWorldEdit-Core"
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit") {
        transitive = false
    }
}

test {
    useJUnitPlatform()
}


def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

shadowJar {
    relocate 'com.infernalsuite.asp.loaders', 'us.dxtrus.prisoncore.libraries'
    destinationDirectory.set(file("$rootDir/target"))
    archiveClassifier.set('')
    minimize()
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar.dependsOn shadowJar